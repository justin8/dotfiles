#!/bin/bash
[[ -e $HOME/.sharedrc-addon ]] && source $HOME/.sharedrc-addon

# Add ~/.bin to path
export PATH=$HOME/.local/bin:$HOME/.local/gnubin:$PATH

# Force Gnome keyring usage if it is enabled
keyring_path="/run/user/${EUID}/keyring/ssh"
if [[ -e $keyring_path ]]
then
	export SSH_AUTH_SOCK="$keyring_path"
fi

# Aliases
alias vi=vim
alias less='less -R'
alias rsync='rsync --info=progress2'
alias grep='grep --color=auto'
alias ta='tmux -CC attach'

if [[ $(uname) == Linux ]]
then
	alias copy='copy --reflink=auto'
fi
export EDITOR="vim"

# Fix to make vim work with color themes
if [[ $TERM != linux ]]
then
	export TERM=xterm-256color
fi

# Path fix for RHEL/Debian
export PATH=$PATH:/usr/local/sbin:/usr/sbin:/sbin

# Add RVM to PATH
export PATH="$PATH:$HOME/.rvm/bin"

# Add linuxbrew to path
if [[ -e /home/linuxbrew/.linuxbrew ]]; then
	eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
fi

# Use NVM if it is installed
READLINK=readlink
which greadlink &>/dev/null && READLINK=greadlink
export NVM_DIR="$($READLINK -f "$HOME/.nvm")"

if [[ -e $NVM_DIR ]]; then
	load_nvm(){
		echo "nvm not loaded! Loading now..." >&2
		[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
	}

	nvm(){
		if [[ $(type nvm) =~ "load_nvm" ]] || [[ $(type nvm) =~ "sharedrc" ]]; then
			unset -f nvm
			load_nvm
		fi
		nvm "$@"
	}

	node(){
		unset -f node
		if [[ $(type nvm) =~ "load_nvm" ]] || [[ $(type nvm) =~ "sharedrc" ]]; then
			load_nvm
		fi
		node "$@"
	}

	npm(){
		unset -f npm
		if [[ $(type nvm) =~ "load_nvm" ]] || [[ $(type nvm) =~ "sharedrc" ]]; then
			load_nvm
		fi
		npm "$@"
	}
fi

# Enable python virtualenvs
if [[ -e $HOME/.pyenv ]]; then
	export PYENV_ROOT="$HOME/.pyenv"
	export PATH="$PYENV_ROOT/bin:$PATH"
	export WORKON_HOME=$HOME/.virtualenvs

	pyenv() {
		echo "pyenv not loaded! Loading now..." >&2
		unset -f pyenv
		eval "$(pyenv init -)"
		pyenv "$@"
	}

	eval "$(
	for i in $PYENV_ROOT/shims/*; do
		binary="${i#*pyenv/shims/}"
		cat <<-EOF
		$binary() {
			if [[ \$(type pyenv) =~ "Loading now" ]] || [[ \$(type pyenv) =~ "sharedrc" ]]; then
				eval "\$(pyenv init -)"
			fi
			unset -f $binary
			$binary \$@
		}
		EOF
	done)"

	init_virtualenvwrapper() {
		eval "$(pyenv init -)"
		pyenv virtualenvwrapper_lazy
	}

	# Wrappers for virtualenv wrapper to load on-demand only
	mkvirtualenv() {
		unset -f mkvirtualenv
		init_virtualenvwrapper
		mkvirtualenv "$@"
	}

	rmvirtualenv() {
		unset -f rmvirtualenv
		init_virtualenvwrapper
		rmvirtualenv "$@"
	}

	workon() {
		unset -f workon
		init_virtualenvwrapper
		workon "$@"
	}

fi

# Add ~/.bin to path
export PATH=$HOME/.local/bin:$PATH

# Source nix if it is available
NIX_PATH="$HOME/.nix-profile/etc/profile.d/nix.sh"
if [[ -e $NIX_PATH ]]; then
	. $NIX_PATH
fi
