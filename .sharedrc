#!/bin/bash
[[ -e $HOME/.sharedrc-addon ]] && source $HOME/.sharedrc-addon

# Add ~/.bin to path
export PATH=$HOME/.yadm-project:$HOME/.local/bin:$HOME/.local/gnubin:$PATH

# Add yarn binaries to path
export PATH=$HOME/.yarn/bin:$PATH

# Add toolbox to path
export PATH=$HOME/.toolbox/bin:$PATH

# Force Gnome keyring usage if it is enabled
keyring_path="/run/user/${EUID}/keyring/ssh"
if [[ -e $keyring_path ]]; then
	export SSH_AUTH_SOCK="$keyring_path"
fi

# Use custom certs file for python requests if it exists
if [[ -e $HOME/.local/ssl/cert.pem ]]; then
	export REQUESTS_CA_BUNDLE=$HOME/.local/ssl/cert.pem
fi

# Aliases
alias vi=vim
alias vim=nvim
if $(which batcat &>/dev/null); then
  alias bat=batcat
fi
alias cat=bat
alias less=bat
alias rsync='rsync --info=progress2'
alias grep='grep --color=auto'
alias kmonday='kinit -f -l 7d -r 30d'
alias ls='ls --color=auto'

alias bb='brazil-build'

alias mwinit="mwinit -s"
alias mwcurl='curl --location-trusted --negotiate -u : -b ~/.midway/cookie -c ~/.midway/cookie'
alias update_internal_certs='mkdir -p $HOME/.local/ssl; security find-certificate -a -p /System/Library/Keychains/SystemRootCertificates.keychain /Library/Keychains/System.keychain > $HOME/.local/ssl/cert.pem'


export SEMGREP_SEND_METRICS=off

if [[ $(uname) == Linux ]]
then
	alias copy='copy --reflink=auto'
	alias mwinit="mwinit -s -o"
fi

export EDITOR="nvim"
export AWS_PAGER="" # Disable pagination in AWS CLI by default

# Fix to make vim work with color themes
if [[ $TERM != linux ]]
then
	export TERM=xterm-256color
fi

# Path fix for RHEL/Debian
export PATH=$PATH:/usr/local/sbin:/usr/sbin:/sbin

# Add RVM to PATH
export PATH="$PATH:$HOME/.rvm/bin"

# Add Rust cargo to PATH
export PATH="$HOME/.cargo/bin:$PATH"

# Add go binaries to PATH
export PATH="$HOME/go/bin:$PATH"

# Add linuxbrew to path
if [[ -e /home/linuxbrew/.linuxbrew ]]; then
	eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
fi

# Add mac brew to path
if [[ -e /opt/homebrew/bin/brew ]]; then
	eval "$(/opt/homebrew/bin/brew shellenv)"
fi


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
if $(which conda &>/dev/null); then
	__conda_setup="$('/usr/bin/conda' "shell.${SHELL##*/}" 'hook' 2> /dev/null)"
	if [ $? -eq 0 ]; then
		eval "$__conda_setup"
	else
		if [ -f "/usr/etc/profile.d/conda.sh" ]; then
			. "/usr/etc/profile.d/conda.sh"
		else
			export PATH="/usr/bin:$PATH"
		fi
	fi
	unset __conda_setup
fi
# <<< conda initialize <<<


# CDK helpers
cdk-add() {
	packages=""
	for target in "$@"; do
		packages+=" @aws-cdk/aws-$target"
	done
	echo "Adding: $packages"
	if [[ $SHELL =~ zsh ]]; then
		yarn add ${=packages}
	else
		yarn add $packages
	fi
}

# Disable homebrew auto-updating and cleaning and stuff all the time
export HOMEBREW_NO_AUTO_UPDATE=1
export HOMEBREW_NO_INSTALL_CLEANUP=1

# Don't use goproxy, doesn't work on certain networks
export GOPROXY=direct

# Nix config
[[ -f /etc/profile.d/nix-daemon.sh ]] && . /etc/profile.d/nix-daemon.sh
[[ -f $HOME/.nix-profile/etc/profile.d/nix.sh ]] && . $HOME/.nix-profile/etc/profile.d/nix.sh
[[ -f $HOME/.nix-profile/etc/profile.d/hm-session-vars.sh ]] && . $HOME/.nix-profile/etc/profile.d/hm-session-vars.sh

# Ensure nix path is before homebrew - this doesn't work well out of the box on macos as /etc/zshrc is sourced before this, which results in homebrew that only runs in the user-specific config files to run later and prepend itself
PATH=$HOME/.nix-profile/bin:$PATH

[[ -e $HOME/.sharedrc-addon-late ]] && source $HOME/.sharedrc-addon-late
