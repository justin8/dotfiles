#!/bin/bash
DOTFILES=~/dotfiles
PACMAN="zsh git"
AUR="dircolors-solarized-git"
MACBREW="zsh zsh-completion git"
LINUX="false"

function check {
	rc=$1
	[[ $rc == 0 ]] && echo -e "[ \e[1;32mOK\e[00m ]"
	[[ $rc == 1 ]] && echo -e "[\e[1;31mFAILED\e[00m]"
	[[ $rc == 2 ]] && echo -e "[\e[1;33mFixing\e[00m]"
}

if `which sudo > /dev/null 2>&1`; then
	sudo=sudo
elif [[ $UID != 0 ]]; then
	echo "This script requires either sudo or root"
	exit 1
fi

echo -n "Copying dotfiles... "
rsync -a --exclude=install --exclude=install-files --exclude=.git $DOTFILES/.* ~/
check $?

# Check if running Arch Linux
echo "Verifying required packages are installed..."
if grep -vq "Arch Linux" /etc/os-release > /dev/null 2>&1; then
	LINUX="true"

	# Check that aura is installed/up-to-date
	INST_AURA=`pacman -Q aura 2>&1|grep -oE '[0-9]\.[0-9.]+(\-[0-9])?'`
	PAC_AURA=`ls $DOTFILES/install-files/aura*|grep -oE '[0-9]\.[0-9.]+(\-[0-9])?'`
	if [ "$INST_AURA" != "$PAC_AURA" ]; then
		echo "Old/missing aura detected."
		echo "Installing/updating aura"
		$sudo pacman -U install-files/aura*
	fi

	for package in $PACMAN
	do
		pacman -Q $package > /dev/null 2>&1 || PACINST="$PACINST $package"
	done

	for package in $AUR
	do
		pacman -Q $package > /dev/null 2>&1 || AURINST="$AURINST $package"
	done
	[[ $PACINST == "" ]] || $sudo pacman -S $PACINST
	[[ $AURINST == "" ]] || $sudo aura -A $AURINST

	echo -n "Checking SSHD config... "
	if `grep -q "AcceptEnv.*IHAVEPATCHEDFONTS" /etc/ssh/sshd_config`; then
		echo -e "[ \e[1;32mOK\e[00m ]"
	else
		echo -e "[\e[1;33mFixing\e[00m]"
		if `grep -q "AcceptEnv" /etc/ssh/sshd_config`; then
			$sudo sed -i '/^AcceptEnv/ s/$/ IHAVEPATCHEDFONTS/' /etc/ssh/sshd_config
		else
			echo "AcceptEnv IHAVEPATCHEDFONTS" | $sudo tee -a /etc/ssh/sshd_config > /dev/null
		fi
		echo -n "Restarting SSHD... "
		$sudo systemctl restart sshd
		check $?
	fi

	if [ -e /etc/sudoers ]; then
		echo -n "Checking sudoers config... "
		ret=0
		if ! `$sudo grep -q "^Defaults.*env_keep.*SSH_TTY" /etc/sudoers`; then
			ret=2
			echo -e 'Defaults\tenv_keep += "SSH_TTY"' | $sudo tee -a /etc/sudoers > /dev/null
		fi

		if ! `$sudo grep -q "^Defaults.*env_keep.*IHAVEPATCHEDFONTS" /etc/sudoers`; then
			ret=2
			echo -e 'Defaults\tenv_keep += "IHAVEPATCHEDFONTS"' | $sudo tee -a /etc/sudoers > /dev/null
		fi
		check $ret
	fi

# Check if running OS X
elif uname -a|grep -qi darwin > /dev/null 2>&1; then
	for package in $MACBREW
	do
		brew list|grep $package > /dev/null 2>&1 || BREWINST="$BREWINST $package"
	done
	[[ $BREWINST == "" ]] || brew install $BREWINST
	echo "Since you are running OS X. Please ensure 'AcceptEnv' in /etc/sshd_config includes 'IHAVEPATCHEDFONTS'"
	echo "Also check that 'Defaults env_keep += \"SSH_TTY\"' and 'Defaults env_keep += \"IHAVEPATCHEDFONTS\"' are in sudoers"
else
	echo "You are not using Arch Linux; You may have to install some of the following manually: $PACMAN $AUR"
	echo "Once you have; press enter to continue"
	read
fi

if [ "$LINUX" == "true" ]; then
	echo -n "Copying linux specific files... "
	rsync -a $DOTFILES/install-files/linux/.* ~ > /dev/null 2>&1
	check $?

	echo -n "Copying fonts... "
	$sudo mkdir -p /usr/share/fonts/OTF
	$sudo cp $DOTFILES/install-files/fonts/OTF/* /usr/share/fonts/OTF/
	check $?
else
	# Presumably OS X
	echo -n "Copying OS X specific files... "
	rsync -a $DOTFILES/install-files/mac/.* ~ > /dev/null 2>&1
fi

echo -n "Installing/updating oh-my-zsh... "
rm -rf ~/.oh-my-zsh
cd ~
tar zxf $DOTFILES/install-files/oh-my-zsh.tar.gz
cd ~/.oh-my-zsh
git reset --hard origin/master > /dev/null 2>&1
git pull > /dev/null 2>&1
check $?

echo "Changing shell to ZSH..."
echo $SHELL|grep -q zsh || chsh -s `which zsh`
